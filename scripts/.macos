# PLACE DOTFILE IN $HOME DIRECTORY


#!/usr/bin/env bash

CONTINUE=false

echo "###############################################" $red
echo "#        DO NOT RUN THIS SCRIPT BLINDLY       #" $red
echo "#                                             #" $red
echo "#              READ IT THOROUGHLY             #" $red
echo "#         AND EDIT TO SUIT YOUR NEEDS         #" $red
echo "###############################################" $red
echo ""

echo "Have you read through the script you're about to run and " $red
echo "understood the changes it will make to your computer? (y/N)" $red
read -r response
if [[ $response =~ ^([yY][eE][sS]|[yY])$ ]]; then
  CONTINUE=true
fi

if ! $CONTINUE; then
  exit 1
fi

if ! plutil -lint /Library/Preferences/com.apple.TimeMachine.plist >/dev/null ; then
  echo "This script requires your terminal app to have Full Disk Access." $red
  echo "Add this terminal to the Full Disk Access list in System Preferences > Security & Privacy, quit the app, and re-run this script."
  echo ""
  # shellcheck disable=SC2162
  read -p "If you are certain this terminal has Full Disk Access, press [Enter] to continue."
fi

# Close any open System Preferences panes, to prevent them from overriding
# settings we’re about to change
osascript -e 'tell application "System Preferences" to quit'

# Ask for the administrator password upfront
sudo -v

# Keep-alive: update existing `sudo` time stamp until `.macos` has finished
while true; do sudo -n true; sleep 60; kill -0 "$$" || exit; done 2>/dev/null &

###############################################################################
# General UI/UX                                                               #
###############################################################################

# Play feedback when volume is changed
defaults write -g "com.apple.sound.beep.feedback" -int 1

# Alert sound volume
defaults write .GlobalPreferences com.apple.sound.beep.volume -float 0.4326354

###############################################################################
# Trackpad, mouse, keyboard, Bluetooth accessories, and input                 #
###############################################################################

# Disable “natural” (Lion-style) scrolling
defaults write NSGlobalDomain com.apple.swipescrolldirection -bool false

# Enable swipe gesture with three fingers
defaults write com.apple.AppleMultitouchTrackpad TrackpadThreeFingerHorizSwipeGesture -int 1

# Enable swipe gesture with three fingers to reveal app expose
# defaults write com.apple.AppleMultitouchTrackpad TrackpadThreeFingerVertSwipeGesture -int 0

# Use scroll gesture with the command modifier key to zoom
# chmod +x ~/Library/Preferences/com.apple.universalaccess.plist
# sudo chmod u+w ~/Library/Preferences/com.apple.universalaccess.plist
# write com.apple.universalaccess closeViewScrollWheelToggle -int 0
# write com.apple.universalaccess closeViewScrollWheelModifiersInt -int 1048576
# Follow the mouse focus while zoomed in
# write com.apple.universalaccess closeViewPanningMode -int 0

plutil -insert closeViewScrollWheelToggle -bool YES ~/Library/Preferences/com.apple.universalaccess.plist
plutil -insert closeViewScrollWheelModifiersInt -integer 1048576 ~/Library/Preferences/com.apple.universalaccess.plist
plutil -insert closeViewPanningMode -integer 0 ~/Library/Preferences/com.apple.universalaccess.plist

# Disable press-and-hold for keys in favor of key repeat
defaults write NSGlobalDomain ApplePressAndHoldEnabled -bool false

# Set a blazingly fast keyboard repeat rate
defaults write NSGlobalDomain KeyRepeat -int 2
defaults write NSGlobalDomain InitialKeyRepeat -int 15

###############################################################################
# Screen                                                                      #
###############################################################################

# Save screenshots to the desktop
mkdir -p ~/Desktop/Screenshots
defaults write com.apple.screencapture location -string "~/Desktop/Screenshots"

# Screen shot shortcuts
defaults write com.apple.symbolichotkeys AppleSymbolicHotKeys -dict-add 21 "{enabled = 1; value = {parameters = (113, 12, 1048576); type = 'standard';};}"
plutil -replace AppleSymbolicHotKeys.21.enabled -integer 1 ~/Library/Preferences/com.apple.symbolichotkeys.plist
plutil -replace AppleSymbolicHotKeys.21.value.parameters -xml '<array><integer>113</integer><integer>12</integer><integer>1048576</integer></array>' ~/Library/Preferences/com.apple.symbolichotkeys.plist
plutil -replace AppleSymbolicHotKeys.21.value.type -string 'standard' ~/Library/Preferences/com.apple.symbolichotkeys.plist

defaults write com.apple.symbolichotkeys AppleSymbolicHotKeys -dict-add 28 "{enabled = 1; value = {parameters = (50, 19, 1179648); type = 'standard';};}"
plutil -replace AppleSymbolicHotKeys.28.enabled -integer 1 ~/Library/Preferences/com.apple.symbolichotkeys.plist
plutil -replace AppleSymbolicHotKeys.28.value.parameters -xml '<array><integer>50</integer><integer>19</integer><integer>1179648</integer></array>' ~/Library/Preferences/com.apple.symbolichotkeys.plist
plutil -replace AppleSymbolicHotKeys.28.value.type -string 'standard' ~/Library/Preferences/com.apple.symbolichotkeys.plist

defaults write com.apple.symbolichotkeys AppleSymbolicHotKeys -dict-add 29 "{enabled = 0; value = {parameters = (51, 20, 1441792); type = 'standard';};}"
plutil -replace AppleSymbolicHotKeys.29.enabled -integer 0 ~/Library/Preferences/com.apple.symbolichotkeys.plist
plutil -replace AppleSymbolicHotKeys.29.value.parameters -xml '<array><integer>51</integer><integer>20</integer><integer>1441792</integer></array>' ~/Library/Preferences/com.apple.symbolichotkeys.plist
plutil -replace AppleSymbolicHotKeys.29.value.type -string 'standard' ~/Library/Preferences/com.apple.symbolichotkeys.plist

defaults write com.apple.symbolichotkeys AppleSymbolicHotKeys -dict-add 30 "{enabled = 1; value = {parameters = (51, 20, 1179648); type = 'standard';};}"
plutil -replace AppleSymbolicHotKeys.30.enabled -integer 1 ~/Library/Preferences/com.apple.symbolichotkeys.plist
plutil -replace AppleSymbolicHotKeys.30.value.parameters -xml '<array><integer>51</integer><integer>20</integer><integer>1179648</integer></array>' ~/Library/Preferences/com.apple.symbolichotkeys.plist
plutil -replace AppleSymbolicHotKeys.30.value.type -string 'standard' ~/Library/Preferences/com.apple.symbolichotkeys.plist

defaults write com.apple.symbolichotkeys AppleSymbolicHotKeys -dict-add 31 "{enabled = 1; value = {parameters = (52, 21, 1179648); type = 'standard';};}"
plutil -replace AppleSymbolicHotKeys.31.enabled -integer 1 ~/Library/Preferences/com.apple.symbolichotkeys.plist
plutil -replace AppleSymbolicHotKeys.31.value.parameters -xml '<array><integer>52</integer><integer>21</integer><integer>1179648</integer></array>' ~/Library/Preferences/com.apple.symbolichotkeys.plist
plutil -replace AppleSymbolicHotKeys.31.value.type -string 'standard' ~/Library/Preferences/com.apple.symbolichotkeys.plist

###############################################################################
# Finder                                                                      #
###############################################################################

# Avoid creating .DS_Store files on network or USB volumes
defaults write com.apple.desktopservices DSDontWriteNetworkStores -bool true
defaults write com.apple.desktopservices DSDontWriteUSBStores -bool true

# Finder: show all filename extensions
defaults write NSGlobalDomain AppleShowAllExtensions -bool true

# Finder: show path bar
defaults write com.apple.finder ShowPathbar -bool true

# Keep folders on top when sorting by name
defaults write com.apple.finder _FXSortFoldersFirst -bool true

# When performing a search, search the current folder by default
defaults write com.apple.finder FXDefaultSearchScope -string "SCcf"

# Set the preferred view style of Finder to "List"
defaults write com.apple.finder FXPreferredViewStyle -string "Nlsv"

# New windows open to home directory
defaults write com.apple.finder NewWindowTarget "PfHm"
defaults write com.apple.finder NewWindowTargetPath "file:///Users/$(whoami)/"

# Remove items from the Trash after 30 days
defaults write com.apple.finder FXRemoveOldTrashItems -bool true

# Desktop snap to grid
/usr/libexec/PlistBuddy -c "Set :DesktopViewSettings:IconViewSettings:arrangeBy grid" ~/Library/Preferences/com.apple.finder.plist

killall Finder

###############################################################################
# Menu, Dock, Dashboard, and hot corners                                            #
###############################################################################

# Remove Spotlight icon from menu
plutil -remove 'NSStatusItem Visible Item-0' ~/Library/Preferences/com.apple.Spotlight.plist 

# Automatically hide and show the Dock
defaults write com.apple.dock autohide -bool true

# Group windows by application in Mission Control
defaults write com.apple.dock expose-group-apps -bool true

# Make Dock icons of hidden applications translucent
defaults write com.apple.dock showhidden -bool true

# Top left screen corner → Launchpad
defaults write com.apple.dock wvous-tl-corner -int 11
defaults write com.apple.dock wvous-tl-modifier -int 0
# Bottom right screen corner → Mission Control
defaults write com.apple.dock wvous-br-corner -int 2
defaults write com.apple.dock wvous-br-modifier -int 0
# Top right screen corner → Desktop
defaults write com.apple.dock wvous-tr-corner -int 4
defaults write com.apple.dock wvous-tr-modifier -int 0
# Bottom left screen corner → Show application windows
defaults write com.apple.dock wvous-bl-corner -int 2
defaults write com.apple.dock wvous-bl-modifier -int 0

#!/bin/sh
dockutil --no-restart --remove all
dockutil --no-restart --add "/Applications/Google Chrome.app"
dockutil --no-restart --add "/System/Applications/Calendar.app"
dockutil --no-restart --add "/System/Applications/System Settings.app"
dockutil --no-restart --add "/System/Applications/Notes.app"
dockutil --no-restart --add "/System/Applications/Reminders.app"
dockutil --no-restart --add "/Applications/Spotify.app"
dockutil --no-restart --add "/Applications/Telegram Desktop.app"
dockutil --no-restart --add "/Applications/WhatsApp.app"
dockutil --no-restart --add "/System/Applications/Utilities/Terminal.app"
dockutil --no-restart --add "/Applications/Notion.app"
dockutil --no-restart --add "/Applications/Visual Studio Code.app"

killall Dock

###############################################################################
# Application Settings                                                        #
###############################################################################

# Set up Spectacle
cp -r app_settings/Shortcuts.json ~/Library/Application\ Support/Spectacle/Shortcuts.json 2> /dev/null


###############################################################################
# Terminal                                                                    #
###############################################################################

# Only use UTF-8 in Terminal.app
defaults write com.apple.terminal StringEncodings -array 4

# # Dracula theme
# open app_settings/Dracula.terminal
# defaults write com.apple.terminal "Default Window Settings" -string "Dracula"

# Use a modified version of the Solarized Dark theme by default in Terminal.app
osascript <<EOD

tell application "Terminal"

	local allOpenedWindows
	local initialOpenedWindows
	local windowID
	set themeName to "Dracula"

	(* Store the IDs of all the open terminal windows. *)
	set initialOpenedWindows to id of every window

	(* Open the custom theme so that it gets added to the list
	   of available terminal themes (note: this will open two
	   additional terminal windows). *)
	do shell script "open '$HOME/dotfiles/app_settings/" & themeName & ".terminal'"

	(* Wait a little bit to ensure that the custom theme is added. *)
	delay 1

	(* Set the custom theme as the default terminal theme. *)
	set default settings to settings set themeName

	(* Get the IDs of all the currently opened terminal windows. *)
	set allOpenedWindows to id of every window

	repeat with windowID in allOpenedWindows

		(* Close the additional windows that were opened in order
		   to add the custom theme to the list of terminal themes. *)
		if initialOpenedWindows does not contain windowID then
			close (every window whose id is windowID)

		(* Change the theme for the initial opened terminal windows
		   to remove the need to close them in order for the custom
		   theme to be applied. *)
		else
			set current settings of tabs of (every window whose id is windowID) to settings set themeName
		end if

	end repeat

end tell

EOD

# Enable Secure Keyboard Entry in Terminal.app
# See: https://security.stackexchange.com/a/47786/8918
defaults write com.apple.terminal SecureKeyboardEntry -bool true

# Disable the annoying line marks
defaults write com.apple.Terminal ShowLineMarks -int 0

killall Terminal

###############################################################################
# Google Chrome & Google Chrome Canary                                        #
###############################################################################

# Disable the all too sensitive backswipe on trackpads
defaults write com.google.Chrome AppleEnableSwipeNavigateWithScrolls -bool false
defaults write com.google.Chrome.canary AppleEnableSwipeNavigateWithScrolls -bool false
